// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Try_Infrastructure_Data_Base_Sql_Server_PersistanceEF;

namespace Try_Infrastructure_Data_Base_Sql_Server_PersistanceEF.Migrations
{
    [DbContext(typeof(MyContext))]
    [Migration("20200912184214_13990622-create-bank-db")]
    partial class _13990622createbankdb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Try_Core_Entities.AccountModel", b =>
                {
                    b.Property<int>("AccountModelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int?>("LoanModelId")
                        .HasColumnType("int");

                    b.Property<int?>("UserModelId")
                        .HasColumnType("int");

                    b.HasKey("AccountModelId");

                    b.HasIndex("LoanModelId");

                    b.HasIndex("UserModelId");

                    b.ToTable("AccountModel");
                });

            modelBuilder.Entity("Try_Core_Entities.LoanModel", b =>
                {
                    b.Property<int>("LoanModelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LoanModelId");

                    b.ToTable("LoanModel");
                });

            modelBuilder.Entity("Try_Core_Entities.Model.AccountLoanModel", b =>
                {
                    b.Property<int>("AccountLoanModelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AccountsAccountModelId")
                        .HasColumnType("int");

                    b.Property<int?>("LoansLoanModelId")
                        .HasColumnType("int");

                    b.HasKey("AccountLoanModelId");

                    b.HasIndex("AccountsAccountModelId");

                    b.HasIndex("LoansLoanModelId");

                    b.ToTable("AccountLoan");
                });

            modelBuilder.Entity("Try_Core_Entities.UserModel", b =>
                {
                    b.Property<int>("UserModelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserModelId");

                    b.ToTable("UserModel");
                });

            modelBuilder.Entity("Try_Core_Entities.AccountModel", b =>
                {
                    b.HasOne("Try_Core_Entities.LoanModel", null)
                        .WithMany("Accounts")
                        .HasForeignKey("LoanModelId");

                    b.HasOne("Try_Core_Entities.UserModel", "user")
                        .WithMany("Accounts")
                        .HasForeignKey("UserModelId");
                });

            modelBuilder.Entity("Try_Core_Entities.Model.AccountLoanModel", b =>
                {
                    b.HasOne("Try_Core_Entities.AccountModel", "Accounts")
                        .WithMany()
                        .HasForeignKey("AccountsAccountModelId");

                    b.HasOne("Try_Core_Entities.LoanModel", "Loans")
                        .WithMany()
                        .HasForeignKey("LoansLoanModelId");
                });
#pragma warning restore 612, 618
        }
    }
}
